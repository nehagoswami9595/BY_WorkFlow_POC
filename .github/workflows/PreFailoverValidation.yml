# This is a basic workflow to help you get started with Actions

name: PreFailoverValidation
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  All-PreFailoverValidation-Task1:
    # The type of runner that the job will run on
    runs-on: windows-latest
    #environment: BYPOC_Test

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Call first function
        run: echoz Call first function!!
        
  # All-PreFailoverValidation-Task2:
  #   # The type of runner that the job will run on
  #   runs-on: windows-latest
  #   #environment: BYPOC_Test

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #       - name: CheckOut Step
  #         uses: actions/checkout@v4
        
  #       - name: Execute Powershell
  #         run: |
  #          (Get-Location).Path
  #          .\Tasks\All-All-Task1.ps1 -DRPhase "PreFailoverValidation" -OperationType "Get"
  #         shell: pwsh  

  Invoke-PreFailoverValidation-WorkFlow-Plan:
    name: Plan
    runs-on: windows-latest
    outputs:
      exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - name: Plan
        id: plan
        run: |
          echo "exitcode=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

  Invoke-PreFailoverValidation-WorkFlow2:
    name: Trigger
    needs: [ Invoke-PreFailoverValidation-WorkFlow-Plan ]
    if: needs.plan.outputs.exitcode == 0
    uses: ./.github/workflows/Failover.yml
